---
import Layout from "../../layouts/Layout.astro";
import Navbar from "../../components/Navbar.astro";
import Footer from "../../components/Footer.astro";
import { createClient } from "@supabase/supabase-js";

// Initialize Supabase client
const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Get project slug from URL params
const { slug } = Astro.params;
console.log("üöÄ ~ slug:", slug);

// Fetch project details
const { data: project } = await supabase
  .from("products")
  // .select("*")
  .select(
    `
      *,
      profiles:profile_id (
        username,
        full_name,
        avatar_url,
        bio
      )
    `
  )
  .eq("slug", slug)
  .single();

// If project not found, redirect to 404
if (!project) {
  return Astro.redirect("/404");
}

// Get status config
const getStatusConfig = (status: string = "not_started") => {
  const configs = {
    completed: {
      dotColor: "bg-emerald-500",
      textColor: "text-emerald-600",
      bgColor: "bg-emerald-50",
      label: "Completed",
    },
    in_progress: {
      dotColor: "bg-amber-500",
      textColor: "text-amber-600",
      bgColor: "bg-amber-50",
      label: "In Progress",
    },
    not_started: {
      dotColor: "bg-gray-300",
      textColor: "text-gray-400",
      bgColor: "bg-gray-50",
      label: "Not Started",
    },
  };
  return configs[status as keyof typeof configs];
};

// Format date
const formatDate = (date: string) => {
  return new Date(date).toLocaleDateString("en-US", {
    month: "long",
    day: "numeric",
    year: "numeric",
  });
};
---

<Layout title={`${project.title} - 12 in 12`}>
  <Navbar />

  <main class="bg-slate-900 pt-24 pb-16 min-h-screen">
    <div class="container mx-auto px-4">
      {/* Back Link */}
      <div class="max-w-4xl mx-auto mb-8">
        <a
          href="/projects"
          class="inline-flex items-center text-sm text-slate-400 hover:text-primary-400 transition-colors"
        >
          <svg class="w-4 h-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
            <path
              fill-rule="evenodd"
              d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
              clip-rule="evenodd"></path>
          </svg>
          Back to Projects
        </a>
      </div>

      {/* Project Header */}
      <div
        class="max-w-4xl mx-auto bg-slate-800/50 rounded-xl shadow-lg border border-slate-700/50 overflow-hidden mb-8 transition-all hover:shadow-xl hover:shadow-slate-900/50"
      >
        {/* Project Thumbnail */}
        <div class="relative h-80 bg-slate-800">
          {
            project.thumbnail_url ? (
              <img
                src={project.thumbnail_url}
                alt={project.title}
                class="w-full h-full object-cover"
              />
            ) : (
              <div class="flex items-center justify-center h-full bg-gradient-to-br from-slate-800 to-slate-900">
                <span class="text-slate-500 text-xl">
                  {project.status === "not_started"
                    ? "üöÄ Coming Soon"
                    : "üèóÔ∏è Building"}
                </span>
              </div>
            )
          }
          <div class="absolute top-4 right-4">
            <span
              class={`px-4 py-1.5 rounded-full text-sm font-medium ${
                getStatusConfig(project.status).bgColor
              } ${getStatusConfig(project.status).textColor} shadow-sm backdrop-blur-sm bg-opacity-90`}
            >
              {getStatusConfig(project.status).label}
            </span>
          </div>
        </div>

        <div class="p-8">
          {/* Builder Info */}
          <div
            class="flex flex-col sm:flex-row sm:items-center gap-6 mb-8 p-6 bg-slate-800/50 rounded-xl border border-slate-700"
          >
            <div class="flex items-center gap-4">
              {
                project.profiles.avatar_url ? (
                  <img
                    src={project.profiles.avatar_url}
                    alt={project.profiles.username}
                    class="w-16 h-16 rounded-full ring-2 ring-slate-700 shadow-md"
                  />
                ) : (
                  <div class="w-16 h-16 rounded-full bg-gradient-to-br from-primary-900 to-primary-800 flex items-center justify-center ring-2 ring-slate-700 shadow-md">
                    <span class="text-primary-200 text-xl font-medium">
                      {project.profiles.username?.[0]?.toUpperCase()}
                    </span>
                  </div>
                )
              }
              <div>
                <h4 class="text-lg font-semibold text-slate-200">
                  {project.profiles.full_name || project.profiles.username}
                </h4>
                <p class="text-sm text-slate-400 mb-2">
                  @{project.profiles.username}
                </p>
                {
                  project.profiles.bio && (
                    <p class="text-sm text-slate-400 max-w-md">
                      {project.profiles.bio}
                    </p>
                  )
                }
              </div>
            </div>
            <div class="sm:ml-auto">
              <a
                href={`/${project.profiles.username}`}
                class="inline-flex items-center px-4 py-2 bg-slate-700 text-slate-200 rounded-lg hover:bg-slate-600 transition-colors border border-slate-600 font-medium shadow-sm hover:shadow"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-5 h-5 mr-2"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
                  <circle cx="9" cy="7" r="4"></circle>
                  <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
                  <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                </svg>
                View Profile
              </a>
            </div>
          </div>

          {/* Project Info */}
          <h1 class="text-4xl font-bold text-slate-100 mb-4 leading-tight">
            {project.title}
          </h1>
          {
            project.description && (
              <p class="text-lg text-slate-300 mb-8 whitespace-pre-wrap leading-relaxed">
                {project.description}
              </p>
            )
          }

          {/* Project Meta */}
          <div
            class="grid grid-cols-2 md:grid-cols-4 gap-6 py-6 border-y border-slate-700"
          >
            <div>
              <div class="text-sm font-medium text-slate-400 mb-1">Status</div>
              <div class="flex items-center gap-1.5">
                <div
                  class={`w-2 h-2 rounded-full ${getStatusConfig(project.status).dotColor}`}
                >
                </div>
                <span
                  class={`text-sm ${getStatusConfig(project.status).textColor}`}
                >
                  {getStatusConfig(project.status).label}
                </span>
              </div>
            </div>
            <div>
              <div class="text-sm font-medium text-slate-400 mb-1">Month</div>
              <div class="text-sm text-slate-300">{project.month}</div>
            </div>
            <div>
              <div class="text-sm font-medium text-slate-400 mb-1">Started</div>
              <div class="text-sm text-slate-300">
                {formatDate(project.created_at)}
              </div>
            </div>
            {
              project.completed_at && (
                <div>
                  <div class="text-sm font-medium text-slate-400 mb-1">
                    Completed
                  </div>
                  <div class="text-sm text-slate-300">
                    {formatDate(project.completed_at)}
                  </div>
                </div>
              )
            }
          </div>

          {/* Tech Stack */}
          {
            project.tech_stack && (
              <div class="mt-8">
                <h3 class="text-base font-semibold text-slate-200 mb-4">
                  Tech Stack
                </h3>
                <div class="flex flex-wrap gap-2">
                  {project.tech_stack.map((tech: string) => (
                    <span class="px-3 py-1.5 bg-slate-700/50 text-slate-300 rounded-lg text-sm font-medium hover:bg-slate-700 transition-colors cursor-default border border-slate-600">
                      {tech}
                    </span>
                  ))}
                </div>
              </div>
            )
          }

          {/* Project Links */}
          {
            (project.github_url || project.demo_url) && (
              <div class="flex flex-wrap gap-4 mt-8">
                {project.github_url && (
                  <a
                    href={project.github_url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-6 py-3 bg-slate-700 text-slate-200 rounded-lg hover:bg-slate-600 transition-all hover:shadow-md border border-slate-600"
                  >
                    <svg
                      class="w-5 h-5 mr-2"
                      viewBox="0 0 24 24"
                      fill="currentColor"
                    >
                      <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z" />
                    </svg>
                    View Source Code
                  </a>
                )}
                {project.demo_url && (
                  <a
                    href={project.demo_url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-all hover:shadow-md"
                  >
                    <svg
                      class="w-5 h-5 mr-2"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                      />
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                      />
                    </svg>
                    View Live Demo
                  </a>
                )}
              </div>
            )
          }
        </div>
      </div>

      {/* Project Updates */}
      {
        project.product_updates && project.product_updates.length > 0 && (
          <div class="max-w-4xl mx-auto">
            <h2 class="text-2xl font-bold text-slate-100 mb-6">
              Project Updates
            </h2>
            <div class="space-y-6">
              {project.product_updates.map((update: any) => (
                <div class="bg-slate-800/50 rounded-xl shadow-md border border-slate-700 p-6 hover:shadow-lg transition-all">
                  <div class="flex items-center justify-between mb-4">
                    <div
                      class={`
                    inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium
                    ${
                      update.type === "milestone"
                        ? "bg-purple-900/50 text-purple-300 border border-purple-700"
                        : update.type === "progress"
                          ? "bg-blue-900/50 text-blue-300 border border-blue-700"
                          : update.type === "launch"
                            ? "bg-emerald-900/50 text-emerald-300 border border-emerald-700"
                            : "bg-amber-900/50 text-amber-300 border border-amber-700"
                    }
                  `}
                    >
                      <span class="mr-1.5">
                        {update.type === "milestone"
                          ? "üèÜ"
                          : update.type === "progress"
                            ? "üìà"
                            : update.type === "launch"
                              ? "üöÄ"
                              : "üí°"}
                      </span>
                      {update.type.charAt(0).toUpperCase() +
                        update.type.slice(1)}
                    </div>
                    <time class="text-sm text-slate-400">
                      {formatDate(update.created_at)}
                    </time>
                  </div>
                  <p class="text-slate-300 whitespace-pre-wrap leading-relaxed">
                    {update.content}
                  </p>
                </div>
              ))}
            </div>
          </div>
        )
      }

      {/* Lessons Learned - Only show for completed projects */}
      {
        project.status === "completed" && project.lessons_learned && (
          <div class="max-w-4xl mx-auto mt-12">
            <div class="bg-emerald-900/20 rounded-xl p-8 border border-emerald-700/30 shadow-sm hover:shadow-md transition-all">
              <h2 class="text-2xl font-bold text-emerald-200 mb-4 flex items-center gap-2">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-6 h-6"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M12 20h9" />
                  <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z" />
                </svg>
                Lessons Learned
              </h2>
              <p class="text-emerald-100 whitespace-pre-wrap leading-relaxed">
                {project.lessons_learned}
              </p>
            </div>
          </div>
        )
      }
    </div>
  </main>

  <Footer />
</Layout>
