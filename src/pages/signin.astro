---
import Base from "../layouts/Base.astro";
const title = "Sign in";

// Get query parameters for messages
const searchParams = Astro.url.searchParams;
const success = searchParams.get("success");
const error = searchParams.get("error");
---

<Base title={title}>
  <main class="bg-slate-900 pt-24 pb-16">
    <div class="relative">
      <div class="absolute inset-0 bg-grid-slate-800/[0.1] bg-[size:40px_40px]">
      </div>
      <div
        class="absolute inset-0 bg-gradient-to-b from-slate-900/50 to-slate-900"
      >
      </div>

      <div class="relative mx-auto max-w-md px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16 animate-fade-in">
          <h1 class="text-3xl font-bold tracking-tight text-white sm:text-4xl">
            {title}
          </h1>
          <p class="mt-4 text-lg text-slate-300">
            Sign in to your account to continue building amazing things.
          </p>
        </div>

        {
          success && (
            <div class="mb-6 p-4 rounded-md bg-green-50 border border-green-200 text-green-800">
              <p>Check your email for the magic link to sign in!</p>
            </div>
          )
        }

        {
          error && (
            <div class="mb-6 p-4 rounded-md bg-red-50 border border-red-200 text-red-800">
              <p>{decodeURIComponent(error)}</p>
            </div>
          )
        }

        <form
          id="signin-form"
          action="/api/auth/signin"
          method="post"
          class="space-y-8 animate-slide-up bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700/50"
        >
          <div>
            <label for="email" class="block text-sm font-medium text-slate-300">
              Email
            </label>
            <div class="mt-2">
              <input
                id="email"
                type="email"
                name="email"
                placeholder="your@email.com"
                required
                class="block w-full rounded-md border-0 bg-slate-700/50 py-2 px-3 text-white shadow-sm ring-1 ring-inset ring-slate-600 placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-primary-500"
              />
            </div>
          </div>

          <div class="flex flex-col gap-4">
            <button
              id="submit-btn"
              type="submit"
              class="w-full rounded-full px-6 py-3 text-sm font-semibold text-white bg-gradient-to-r from-primary-600 to-accent-500 hover:from-primary-700 hover:to-accent-600 focus:outline-none focus:ring-2 focus:ring-primary-600 focus:ring-offset-2 focus:ring-offset-slate-900 transition-all disabled:opacity-50 disabled:cursor-not-allowed"
            >
              <span class="inline-flex items-center gap-2">
                <span>Send Me Magic Link</span>
                <span id="submitSpinner" class="hidden">
                  <svg
                    class="animate-spin h-4 w-4"
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                  >
                    <circle
                      class="opacity-25"
                      cx="12"
                      cy="12"
                      r="10"
                      stroke="currentColor"
                      stroke-width="4"></circle>
                    <path
                      class="opacity-75"
                      fill="currentColor"
                      d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                    ></path>
                  </svg>
                </span>
              </span>
            </button>
            <div class="text-center text-sm text-slate-400">
              Don't have an account?{" "}
              <a
                href="/join"
                class="text-sm text-slate-300 hover:text-slate-200"
              >
                Join here
              </a>
            </div>
          </div>
        </form>
      </div>
    </div>
  </main>
</Base>

<script>
  // Handle code parameter from magic link
  const urlParams = new URLSearchParams(window.location.search);
  const code = urlParams.get("code");

  if (code) {
    window.location.href = `/api/auth/callback?code=${encodeURIComponent(code)}`;
  }

  // Handle form submission
  const form = document.getElementById("signin-form") as HTMLFormElement;
  const submitBtn = document.getElementById("submit-btn") as HTMLButtonElement;
  const submitSpinner = document.getElementById("submitSpinner");

  // Function to show loading state
  function setLoading(isLoading: boolean) {
    if (submitBtn && submitSpinner) {
      submitBtn.disabled = isLoading;
      if (isLoading) {
        submitSpinner.classList.remove("hidden");
        submitBtn.querySelector("span:first-child")!.textContent = "Sending...";
      } else {
        submitSpinner.classList.add("hidden");
        submitBtn.querySelector("span:first-child")!.textContent =
          "Send Me Magic Link";
      }
    }
  }

  if (form && submitBtn) {
    form.addEventListener("submit", () => {
      setLoading(true);
    });
  }
</script>
