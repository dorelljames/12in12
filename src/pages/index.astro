---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Hero from "../components/Hero.astro";
import Features from "../components/Features.astro";
import Benefits from "../components/Benefits.astro";
import HowItWorks from "../components/HowItWorks.astro";
import FAQ from "../components/FAQ.astro";
import CTA from "../components/CTA.astro";
import Footer from "../components/Footer.astro";
import { createClient } from "@supabase/supabase-js";

// Initialize Supabase client
const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Get current month
const currentMonth = new Date().toLocaleString("default", { month: "long" });

// Fetch latest projects for current month
const { data: latestProjects } = await supabase
  .from("products")
  .select(
    `
    *,
    profiles:profile_id (
      username,
      full_name,
      avatar_url
    )
  `
  )
  .eq("month", currentMonth)
  .in("status", ["in_progress", "completed"])
  .order("created_at", { ascending: false })
  .limit(6);
---

<Layout>
  <Navbar />
  <main>
    <Hero />
    <Features />
    <Benefits />

    {/* Latest Projects Section */}
    <section class="py-24 bg-slate-900">
      <div class="container mx-auto px-4">
        <div class="max-w-3xl mx-auto text-center mb-16">
          <h2 class="text-4xl font-bold text-slate-100 mb-4">
            Building This Month
          </h2>
          <p class="text-lg text-slate-300">
            Check out what our builders are working on in {currentMonth}
          </p>
        </div>

        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto"
        >
          {
            latestProjects?.map((project) => (
              <div class="bg-slate-800/50 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-slate-700/50 overflow-hidden group hover:border-primary-500/30">
                {/* Project Thumbnail */}
                <div class="relative h-48 bg-slate-800">
                  {project.thumbnail_url ? (
                    <img
                      src={project.thumbnail_url}
                      alt={project.title}
                      class="w-full h-full object-cover"
                    />
                  ) : (
                    <div class="flex items-center justify-center h-full bg-gradient-to-br from-slate-800 to-slate-900">
                      <span class="text-slate-500">üèóÔ∏è Building</span>
                    </div>
                  )}
                  <div class="absolute top-4 right-4">
                    {(() => {
                      type StatusConfig = {
                        [key: string]: {
                          bg: string;
                          text: string;
                          border: string;
                          label: string;
                        };
                      };

                      const statusConfig: StatusConfig = {
                        completed: {
                          bg: "bg-green-900/50",
                          text: "text-green-300",
                          border: "border-green-700/50",
                          label: "Completed",
                        },
                        in_progress: {
                          bg: "bg-primary-900/50",
                          text: "text-primary-300",
                          border: "border-primary-700/50",
                          label: "In Progress",
                        },
                        not_started: {
                          bg: "bg-slate-900/50",
                          text: "text-slate-300",
                          border: "border-slate-700/50",
                          label: "Not Started",
                        },
                        canceled: {
                          bg: "bg-red-900/50",
                          text: "text-red-300",
                          border: "border-red-700/50",
                          label: "Canceled",
                        },
                        parked: {
                          bg: "bg-yellow-900/50",
                          text: "text-yellow-300",
                          border: "border-yellow-700/50",
                          label: "Parked",
                        },
                      };

                      const config = statusConfig[
                        project.status as keyof typeof statusConfig
                      ] || {
                        bg: "bg-slate-900/50",
                        text: "text-slate-300",
                        border: "border-slate-700/50",
                        label: "Unknown",
                      };

                      return (
                        <span
                          class={`uppercase px-3 py-1.5 ${config.bg} ${config.text} rounded-full text-xs font-medium border ${config.border}`}
                        >
                          {config.label}
                        </span>
                      );
                    })()}
                  </div>
                </div>

                <div class="p-6">
                  {/* Builder Info */}
                  <div class="flex items-center gap-3 mb-4">
                    {project.profiles.avatar_url ? (
                      <img
                        src={project.profiles.avatar_url}
                        alt={project.profiles.username}
                        class="w-10 h-10 rounded-full ring-2 ring-slate-700"
                      />
                    ) : (
                      <div class="w-10 h-10 rounded-full bg-primary-900/50 text-primary-300 flex items-center justify-center ring-2 ring-primary-700/50">
                        <span class="text-sm font-medium">
                          {project.profiles.username?.[0]?.toUpperCase()}
                        </span>
                      </div>
                    )}
                    <div>
                      <h4 class="text-sm font-medium text-slate-200">
                        {project.profiles.full_name ||
                          project.profiles.username}
                      </h4>
                      <a
                        href={`/${project.profiles.username}`}
                        class="text-xs text-slate-400 hover:text-primary-400"
                      >
                        @{project.profiles.username}
                      </a>
                    </div>
                  </div>

                  {/* Project Info */}
                  <a
                    href={`/projects/${project.slug}`}
                    class="text-xl font-semibold text-slate-100 mb-2 group-hover:text-primary-400 transition-colors block"
                  >
                    {project.title}
                  </a>
                  {project.description && (
                    <p class="text-slate-300 text-sm mb-4 line-clamp-2">
                      {project.description}
                    </p>
                  )}

                  {/* Tech Stack */}
                  {project.tech_stack && (
                    <div class="flex flex-wrap gap-2">
                      {project.tech_stack.map((tech: string) => (
                        <span class="px-2.5 py-1 bg-slate-700/50 text-slate-300 rounded-lg text-xs border border-slate-600">
                          {tech}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            ))
          }
        </div>

        {/* Show this when no projects */}
        {
          (!latestProjects || latestProjects.length === 0) && (
            <div class="text-center py-12 bg-slate-800/50 rounded-2xl border border-slate-700">
              <div class="text-4xl mb-4">üå±</div>
              <h3 class="text-lg font-medium text-slate-200 mb-2">
                No Active Projects Yet
              </h3>
              <p class="text-slate-300">
                Be the first to start building this month!
              </p>
            </div>
          )
        }

        {/* View All Link */}
        <div class="text-center mt-12">
          <a
            href="/projects"
            class="inline-flex items-center gap-2 px-8 py-3 text-base font-medium text-white bg-primary-600 hover:bg-primary-700 rounded-xl transition-all duration-300 shadow-lg hover:shadow-primary-900/50"
          >
            View All Projects
            <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
              <path
                fill-rule="evenodd"
                d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                clip-rule="evenodd"></path>
            </svg>
          </a>
        </div>
      </div>
    </section>

    <HowItWorks />
    <FAQ />
    <CTA />
  </main>
  <Footer />
</Layout>

<script>
  // Handle code parameter from magic link
  const urlParams = new URLSearchParams(window.location.search);
  const code = urlParams.get("code");
  const access_token = urlParams.get("access_token");

  if (code || access_token) {
    window.location.href = `/api/auth/callback?code=${encodeURIComponent(code || access_token || "")}`;
  }
</script>
