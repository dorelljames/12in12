---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import { Client } from "@notionhq/client";

const notion = new Client({
  auth: import.meta.env.PUBLIC_NOTION_TOKEN,
});

const DATABASE_ID = import.meta.env.PUBLIC_NOTION_DATABASE_ID;

type FormState = {
  success?: string;
  error?: string;
  errors?: {
    name?: string;
    email?: string;
    reason?: string;
    username?: string;
  };
  values?: {
    name: string;
    email: string;
    reason: string;
    username: string;
  };
};

let formState: FormState = {};

// Handle form submission
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("name")?.toString().trim();
    const email = data.get("email")?.toString().trim();
    const reason = data.get("reason")?.toString().trim();
    const username = data.get("username")?.toString().trim();

    // Store form values
    formState.values = {
      name: name ?? "",
      email: email ?? "",
      reason: reason ?? "",
      username: username ?? "",
    };

    // Validate fields
    formState.errors = {};

    if (!name) {
      formState.errors.name = "Please tell us your name";
    } else if (name.length < 2) {
      formState.errors.name = "Name must be at least 2 characters";
    }

    if (!email) {
      formState.errors.email = "Email is required";
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
      formState.errors.email = "Please enter a valid email address";
    }

    if (!reason) {
      formState.errors.reason =
        "Please share what excites you about the program";
    } else if (reason.length < 10) {
      formState.errors.reason =
        "Please provide a bit more detail (at least 10 characters)";
    }

    // If there are any errors, don't proceed
    if (Object.keys(formState.errors).length > 0) {
      formState.error = "Please fix the errors below";
      return;
    } else {
      await notion.pages.create({
        parent: { database_id: DATABASE_ID },
        properties: {
          Name: {
            title: [{ text: { content: name } }],
          },
          Email: {
            email: email,
          },
          Reason: {
            rich_text: [{ text: { content: reason } }],
          },
          Username: {
            rich_text: [{ text: { content: username } }],
          },
        },
      });

      formState.success =
        "Thanks for joining! Check your inbox for the next steps. ðŸŽ‰";
      // Clear form values on success
      formState.values = undefined;
    }
  } catch (error) {
    console.error("Error:", error);
    formState.error = "Something went wrong. Please try again...";
  }
}
---

<Layout title="Join & Build - 12 in 12">
  <Navbar />

  <main class="bg-slate-900 pt-24 pb-16">
    <div class="relative">
      <div class="absolute inset-0 bg-grid-slate-800/[0.1] bg-[size:40px_40px]">
      </div>
      <div
        class="absolute inset-0 bg-gradient-to-b from-slate-900/50 to-slate-900"
      >
      </div>

      <div class="relative mx-auto max-w-2xl px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-16 animate-fade-in">
          <span class="text-primary-400 font-medium">Join & Build ðŸ’ª</span>
          <h1
            class="mt-2 text-3xl font-bold tracking-tight text-white sm:text-4xl"
          >
            Let's Build Something Amazing Together
          </h1>
          <p class="mt-4 text-lg text-slate-300">
            I'm excited to have you join this journey. Let's get to know each
            other a bit better.
          </p>
        </div>

        <div class="my-8">
          {
            formState.success && (
              <div class="text-center font-bold">
                <p class="text-emerald-400">{formState.success}</p>
              </div>
            )
          }
          {
            formState.error && (
              <div class="text-center font-semibold">
                <p class="text-red-400">{formState.error}</p>
              </div>
            )
          }
        </div>

        <form
          method="POST"
          class="space-y-8 animate-slide-up bg-slate-800/50 backdrop-blur-sm rounded-xl p-6 border border-slate-700/50"
        >
          <div class="space-y-6">
            <div>
              <label
                for="name"
                class="block text-sm font-medium text-slate-300"
              >
                What should I call you?
              </label>
              <div class="mt-2">
                <input
                  type="text"
                  name="name"
                  id="name"
                  required
                  minlength="2"
                  value={formState.values?.name}
                  class:list={[
                    "block w-full rounded-md border-0 bg-slate-700/50 py-2 px-3 text-white shadow-sm ring-1 ring-inset placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-primary-500",
                    formState.errors?.name ? "ring-red-500" : "ring-slate-600",
                  ]}
                  placeholder="Your name"
                />
                {
                  formState.errors?.name && (
                    <p class="mt-1 text-sm text-red-400">
                      {formState.errors.name}
                    </p>
                  )
                }
              </div>
            </div>

            <div>
              <label
                for="username"
                class="block text-sm font-medium text-slate-300"
              >
                What would your personal URL here be like?
              </label>
              <div class="mt-2">
                <div class="relative flex rounded-md shadow-sm">
                  <span
                    class="inline-flex items-center px-3 rounded-l-md border-r border-slate-600 bg-slate-700 text-slate-400 text-sm"
                  >
                    https://12in12.pro/
                  </span>
                  <input
                    type="text"
                    name="username"
                    id="username"
                    required
                    value={formState.values?.username}
                    class:list={[
                      "block w-full rounded-none rounded-r-md border-0 bg-slate-700/50 py-2 px-3 text-white shadow-sm ring-1 ring-inset placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-primary-500",
                      formState.errors?.username
                        ? "ring-red-500"
                        : "ring-slate-600",
                    ]}
                    placeholder="username"
                  />
                </div>
                {
                  formState.errors?.username && (
                    <p class="mt-1 text-sm text-red-400">
                      {formState.errors.username}
                    </p>
                  )
                }
              </div>
            </div>

            <div>
              <label
                for="email"
                class="block text-sm font-medium text-slate-300"
              >
                Where can I reach you?
              </label>
              <div class="mt-2">
                <input
                  type="email"
                  name="email"
                  id="email"
                  required
                  value={formState.values?.email}
                  class:list={[
                    "block w-full rounded-md border-0 bg-slate-700/50 py-2 px-3 text-white shadow-sm ring-1 ring-inset placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-primary-500",
                    formState.errors?.email ? "ring-red-500" : "ring-slate-600",
                  ]}
                  placeholder="your@email.com"
                />
                {
                  formState.errors?.email && (
                    <p class="mt-1 text-sm text-red-400">
                      {formState.errors.email}
                    </p>
                  )
                }
              </div>
            </div>

            <div>
              <label
                for="reason"
                class="block text-sm font-medium text-slate-300"
              >
                What excites you most about this program?
              </label>
              <div class="mt-2">
                <textarea
                  id="reason"
                  name="reason"
                  rows="4"
                  required
                  minlength="10"
                  class:list={[
                    "block w-full rounded-md border-0 bg-slate-700/50 py-2 px-3 text-white shadow-sm ring-1 ring-inset placeholder:text-slate-400 focus:ring-2 focus:ring-inset focus:ring-primary-500",
                    formState.errors?.reason
                      ? "ring-red-500"
                      : "ring-slate-600",
                  ]}
                  placeholder="Share your thoughts..."
                  >{formState.values?.reason}</textarea
                >
                {
                  formState.errors?.reason && (
                    <p class="mt-1 text-sm text-red-400">
                      {formState.errors.reason}
                    </p>
                  )
                }
              </div>
              <p class="mt-2 text-sm text-slate-400">
                This helps me understand how I can better support you in your
                journey.
              </p>
            </div>
          </div>

          <div class="flex items-center gap-4">
            <button
              type="submit"
              class="flex-1 rounded-full px-6 py-3 text-sm font-semibold text-white bg-gradient-to-r from-primary-600 to-accent-500 hover:from-primary-700 hover:to-accent-600 focus:outline-none focus:ring-2 focus:ring-primary-600 focus:ring-offset-2 focus:ring-offset-slate-900 transition-all"
            >
              Count Me In! ðŸš€
            </button>
          </div>
        </form>

        <div
          class="mt-16 grid grid-cols-1 gap-8 sm:grid-cols-2 animate-fade-in"
        >
          <div class="text-center">
            <div class="text-3xl font-bold text-white">10+</div>
            <div class="mt-2 text-sm text-slate-400">
              Builders Already Joined
            </div>
          </div>
          <div class="text-center">
            <div class="text-3xl font-bold text-white">24/7</div>
            <div class="mt-2 text-sm text-slate-400">Community Support</div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <Footer />
</Layout>
