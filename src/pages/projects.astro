---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import { createClient } from "@supabase/supabase-js";

// Initialize Supabase client
const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

// Get URL params for filtering
const { searchParams } = Astro.url;
const status = searchParams.get("status");
const month = searchParams.get("month");

// Get current month
const currentMonth = new Date().toLocaleString("default", { month: "long" });

// Build query
let query = supabase
  .from("products")
  .select(
    `
    *,
    profiles:profile_id (
      username,
      full_name,
      avatar_url
    )
  `
  )
  .order("created_at", { ascending: false });

// Apply filters
if (status) {
  query = query.eq("status", status);
}
if (month) {
  query = query.eq("month", month);
}

// Fetch projects
const { data: projects } = await query;

// Get unique tech stacks for filtering
const techStacks = [
  ...new Set(projects?.flatMap((p) => p.tech_stack || [])),
].sort();

// Get months for filtering
const months = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December",
];

// Get stats
const stats = {
  total: projects?.length || 0,
  completed: projects?.filter((p) => p.status === "completed").length || 0,
  inProgress: projects?.filter((p) => p.status === "in_progress").length || 0,
  notStarted: projects?.filter((p) => p.status === "not_started").length || 0,
};

// Prepare SEO metadata
const title = status
  ? `${status
      .split("_")
      .map((w) => w.charAt(0).toUpperCase() + w.slice(1))
      .join(" ")} Projects - 12 in 12`
  : month
    ? `${month} Projects - 12 in 12`
    : "All Builder Projects - 12 in 12";

const description = status
  ? `Discover ${stats[status.replace("_", "") + "ed"] || stats[status.replace("_", "")]} ${status
      .split("_")
      .map((w) => w.charAt(0).toUpperCase() + w.slice(1))
      .join(" ")} projects built by our community of makers.`
  : month
    ? `Explore projects being built by our community in ${month}. Join us in building 12 products in 12 months!`
    : `Discover ${stats.total} projects built by our community of makers. From completed products to work in progress, see what everyone is building.`;

// Prepare JSON-LD structured data
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  name: title,
  description: description,
  url: Astro.url,
  numberOfItems: stats.total,
  itemListElement: projects?.map((project, index) => ({
    "@type": "SoftwareApplication",
    position: index + 1,
    name: project.title,
    description: project.description,
    applicationCategory: project.tech_stack?.join(", "),
    author: {
      "@type": "Person",
      name: project.profiles.full_name || project.profiles.username,
      url: `${Astro.url.origin}/${project.profiles.username}`,
    },
    ...(project.demo_url && { url: project.demo_url }),
    ...(project.github_url && { codeRepository: project.github_url }),
  })),
};

const getStatusConfig = (status: string = "not_started") => {
  const configs = {
    completed: {
      dotColor: "bg-emerald-400",
      textColor: "text-emerald-200",
      bgColor: "bg-emerald-900/50",
      label: "Completed",
    },
    in_progress: {
      dotColor: "bg-amber-400",
      textColor: "text-amber-200",
      bgColor: "bg-amber-900/50",
      label: "In Progress",
    },
    not_started: {
      dotColor: "bg-slate-400",
      textColor: "text-slate-200",
      bgColor: "bg-slate-800/50",
      label: "Not Started",
    },
  };
  return configs[status as keyof typeof configs];
};
---

<Layout title={title}>
  <head slot="head">
    <!-- Primary Meta Tags -->
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta
      property="og:image"
      content={`${Astro.url.origin}/images/og-projects.png`}
    />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta
      property="twitter:image"
      content={`${Astro.url.origin}/images/og-projects.png`}
    />

    <!-- Canonical URL -->
    <link
      rel="canonical"
      href={new URL("/projects", Astro.url.origin).toString()}
    />

    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  </head>

  <Navbar />

  <main class="bg-slate-900 pt-24 pb-16">
    <div class="container mx-auto px-4">
      {/* Header */}
      <div class="max-w-3xl mx-auto text-center mb-16">
        <h1 class="text-4xl font-bold text-white mb-4">Builder Projects</h1>
        <p class="text-lg text-slate-300">
          Discover what our community is building, one month at a time
        </p>
      </div>

      {/* Stats */}
      <div
        class="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-4xl mx-auto mb-12"
      >
        <div
          class="bg-slate-800/50 rounded-xl p-4 text-center shadow-lg border border-slate-700/50"
        >
          <div class="text-3xl font-bold text-white mb-1">{stats.total}</div>
          <div class="text-sm font-medium text-slate-300">Total Projects</div>
        </div>
        <div
          class="bg-emerald-900/50 rounded-xl p-4 text-center shadow-lg border border-emerald-700/50"
        >
          <div class="text-3xl font-bold text-emerald-400 mb-1">
            {stats.completed}
          </div>
          <div class="text-sm font-medium text-emerald-200">Completed</div>
        </div>
        <div
          class="bg-amber-900/50 rounded-xl p-4 text-center shadow-lg border border-amber-700/50"
        >
          <div class="text-3xl font-bold text-amber-400 mb-1">
            {stats.inProgress}
          </div>
          <div class="text-sm font-medium text-amber-200">In Progress</div>
        </div>
        <div
          class="bg-slate-800/50 rounded-xl p-4 text-center shadow-lg border border-slate-700/50"
        >
          <div class="text-3xl font-bold text-slate-400 mb-1">
            {stats.notStarted}
          </div>
          <div class="text-sm font-medium text-slate-300">Launching Soon</div>
        </div>
      </div>

      {/* Filters */}
      <div
        class="bg-slate-800/50 rounded-xl shadow-lg border border-slate-700/50 p-6 mb-12 max-w-7xl mx-auto"
      >
        <div class="flex flex-col md:flex-row gap-6 p-2">
          {/* Status Filter */}
          <div class="flex-1">
            <label class="block text-sm font-medium text-slate-300 mb-2"
              >Status</label
            >
            <select
              class="w-full rounded-lg bg-slate-700 border border-slate-600 text-slate-200 text-sm px-4 py-2.5 appearance-none hover:bg-slate-600 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
              onchange="window.location.href = this.value"
            >
              <option value="/projects" selected={!status}>All Statuses</option>
              <option
                value="/projects?status=completed"
                selected={status === "completed"}
              >
                Completed
              </option>
              <option
                value="/projects?status=in_progress"
                selected={status === "in_progress"}
              >
                In Progress
              </option>
              <option
                value="/projects?status=not_started"
                selected={status === "not_started"}
              >
                Not Started
              </option>
            </select>
          </div>

          {/* Month Filter */}
          <div class="flex-1">
            <label class="block text-sm font-medium text-slate-300 mb-2"
              >Month</label
            >
            <select
              class="w-full rounded-lg bg-slate-700 border border-slate-600 text-slate-200 text-sm px-4 py-2.5 appearance-none hover:bg-slate-600 focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors"
              onchange="window.location.href = this.value"
            >
              <option value="/projects" selected={!month}>All Months</option>
              {
                months.map((m) => (
                  <option value={`/projects?month=${m}`} selected={month === m}>
                    {m} {m === currentMonth ? "(Current)" : ""}
                  </option>
                ))
              }
            </select>
          </div>
        </div>
      </div>

      {/* Projects Grid */}
      <div
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto"
      >
        {
          projects?.map((project) => (
            <a
              href={`/projects/${project.slug}`}
              class="block bg-slate-800/50 rounded-xl shadow-lg hover:shadow-xl transition-all border border-slate-700/50 overflow-hidden group hover:border-primary-500/30"
            >
              {/* Project Thumbnail */}
              <div class="relative h-48 bg-slate-800">
                {project.thumbnail_url ? (
                  <img
                    src={project.thumbnail_url}
                    alt={project.title}
                    class="w-full h-full object-cover"
                  />
                ) : (
                  <div class="flex items-center justify-center h-full bg-gradient-to-br from-slate-800 to-slate-900">
                    <span class="text-slate-500">
                      {project.status === "not_started"
                        ? "🚀 Coming Soon"
                        : "🏗️ Building"}
                    </span>
                  </div>
                )}
                <div class="absolute top-4 right-4">
                  <span
                    class={`px-3 py-1.5 rounded-full text-xs font-medium ${getStatusConfig(project.status).bgColor} ${getStatusConfig(project.status).textColor} shadow-sm backdrop-blur-sm bg-opacity-90`}
                  >
                    {getStatusConfig(project.status).label}
                  </span>
                </div>
              </div>

              <div class="p-6">
                {/* Builder Info */}
                <div class="flex items-center gap-3 mb-4">
                  {project.profiles.avatar_url ? (
                    <img
                      src={project.profiles.avatar_url}
                      alt={project.profiles.username}
                      class="w-10 h-10 rounded-full ring-2 ring-slate-700"
                    />
                  ) : (
                    <div class="w-10 h-10 rounded-full bg-gradient-to-br from-primary-900 to-primary-800 flex items-center justify-center ring-2 ring-slate-700">
                      <span class="text-primary-200 text-sm">
                        {project.profiles.username?.[0]?.toUpperCase()}
                      </span>
                    </div>
                  )}
                  <div>
                    <h4 class="text-sm font-medium text-slate-200">
                      {project.profiles.full_name || project.profiles.username}
                    </h4>
                    <div class="text-xs text-slate-400 hover:text-primary-400">
                      @{project.profiles.username}
                    </div>
                  </div>
                </div>

                {/* Project Info */}
                <h3 class="text-xl font-semibold text-slate-200 mb-2 group-hover:text-primary-400 transition-colors">
                  {project.title}
                </h3>
                {project.description && (
                  <p class="text-slate-300 text-sm mb-4 line-clamp-2">
                    {project.description}
                  </p>
                )}

                {/* Tech Stack */}
                {project.tech_stack && (
                  <div class="flex flex-wrap gap-2 mb-4">
                    {project.tech_stack.map((tech: string) => (
                      <span class="px-2 py-1 bg-slate-700/50 text-slate-300 rounded text-xs border border-slate-600/50">
                        {tech}
                      </span>
                    ))}
                  </div>
                )}

                {/* Links - Only show for completed projects */}
                {project.status === "completed" && (
                  <div class="flex gap-3 mt-4 pt-4 border-t border-slate-700/50">
                    {project.github_url && (
                      <div class="inline-flex items-center text-sm text-slate-400 hover:text-slate-200">
                        <svg
                          class="w-4 h-4 mr-1"
                          viewBox="0 0 24 24"
                          fill="currentColor"
                        >
                          <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z" />
                        </svg>
                        Code
                      </div>
                    )}
                    {project.demo_url && (
                      <div class="inline-flex items-center text-sm text-slate-400 hover:text-slate-200">
                        <svg
                          class="w-4 h-4 mr-1"
                          viewBox="0 0 24 24"
                          fill="none"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                          />
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                          />
                        </svg>
                        Demo
                      </div>
                    )}
                  </div>
                )}
              </div>
            </a>
          ))
        }
      </div>

      {/* Empty State */}
      {
        (!projects || projects.length === 0) && (
          <div class="text-center py-12">
            <div class="text-slate-400 mb-4">🔍</div>
            <h3 class="text-lg font-medium text-slate-200 mb-2">
              No Projects Found
            </h3>
            <p class="text-slate-400">
              Try adjusting your filters to find what you're looking for
            </p>
          </div>
        )
      }
    </div>
  </main>

  <Footer />
</Layout>
