---
import { supabase } from "../lib/supabase";

// Get auth tokens from cookies
const accessToken = Astro.cookies.get("sb-access-token")?.value;
const refreshToken = Astro.cookies.get("sb-refresh-token")?.value;

// Initialize user and profile as null
let sessionUser = null;

if (accessToken && refreshToken) {
  const {
    data: { user },
  } = await supabase.auth.setSession({
    access_token: accessToken,
    refresh_token: refreshToken,
  });

  sessionUser = user;
}
---

<nav
  class="fixed top-0 left-0 right-0 z-50 backdrop-blur-sm border-b border-slate-800/50 bg-slate-900/80"
>
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
          <div
            class="h-8 w-8 rounded-full bg-gradient-to-r from-primary-600 to-accent-500"
          >
          </div>
          <span class="text-lg font-bold text-white">12 in 12</span>
        </a>
      </div>

      <div class="hidden md:flex md:items-center md:space-x-8">
        {
          Astro.url.pathname === "/" && (
            <>
              <a
                href="/#how-it-works"
                class="text-sm font-medium text-slate-300 hover:text-white transition-colors"
              >
                How It Works
              </a>
              <a
                href="/#benefits"
                class="text-sm font-medium text-slate-300 hover:text-white transition-colors"
              >
                Benefits
              </a>
              <a
                href="/#faq"
                class="text-sm font-medium text-slate-300 hover:text-white transition-colors"
              >
                FAQ
              </a>
            </>
          )
        }

        {
          sessionUser ? (
            <div class="flex items-center space-x-4">
              <div class="relative" id="user-menu">
                <button
                  class="flex items-center justify-center w-10 h-10 rounded-full bg-gradient-to-r from-primary-600 to-accent-500 hover:from-primary-700 hover:to-accent-600 transition-colors focus:outline-none"
                  id="user-menu-button"
                  aria-expanded="false"
                  aria-haspopup="true"
                >
                  <svg
                    class="w-5 h-5 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                    />
                  </svg>
                </button>
                <div
                  class="hidden absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-slate-800 ring-1 ring-black ring-opacity-5"
                  id="user-menu-dropdown"
                  role="menu"
                  aria-orientation="vertical"
                  aria-labelledby="user-menu-button"
                >
                  <div class="py-1">
                    <a
                      href="/profile"
                      class="block px-4 py-2 text-sm text-slate-300 hover:bg-slate-700 hover:text-white"
                      role="menuitem"
                    >
                      Profile
                    </a>
                    <a
                      href="/dashboard"
                      class="block px-4 py-2 text-sm text-slate-300 hover:bg-slate-700 hover:text-white"
                      role="menuitem"
                    >
                      Dashboard
                    </a>
                    <a
                      href="/api/auth/signout"
                      class="block px-4 py-2 text-sm text-slate-300 hover:bg-slate-700 hover:text-white border-t border-slate-700"
                      role="menuitem"
                    >
                      Logout
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ) : (
            <a
              href="/join"
              class="inline-flex items-center justify-center rounded-full px-4 py-1.5 text-sm font-semibold text-white transition-colors bg-gradient-to-r from-primary-600 to-accent-500 hover:from-primary-700 hover:to-accent-600"
            >
              Join & Build Today ðŸ’ª
            </a>
          )
        }
      </div>
    </div>
  </div>
</nav>

<script>
  const userMenuButton = document.getElementById("user-menu-button");
  const userMenuDropdown = document.getElementById("user-menu-dropdown");
  const userMenu = document.getElementById("user-menu");

  let isOpen = false;

  if (userMenuButton && userMenuDropdown && userMenu) {
    // Toggle menu on button click
    userMenuButton.addEventListener("click", (e) => {
      e.stopPropagation();
      isOpen = !isOpen;
      userMenuButton.setAttribute("aria-expanded", isOpen.toString());
      userMenuDropdown.classList.toggle("hidden");
    });

    // Close menu when clicking outside
    document.addEventListener("click", (e) => {
      const target = e.target as Node;
      if (isOpen && !userMenu.contains(target)) {
        isOpen = false;
        userMenuButton.setAttribute("aria-expanded", "false");
        userMenuDropdown.classList.add("hidden");
      }
    });

    // Prevent menu from closing when clicking inside dropdown
    userMenuDropdown.addEventListener("click", (e) => {
      e.stopPropagation();
    });
  }
</script>

<style>
  /* Ensure dropdown stays visible while hovering */
  .group:hover .group-hover\:visible {
    visibility: visible;
  }
</style>
