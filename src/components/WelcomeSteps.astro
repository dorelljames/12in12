---
import { supabase } from "../lib/supabase";
interface Props {
  name: string;
  email: string;
  username: string;
}

const { name, email, username } = Astro.props;

const DISCORD_INVITE_URL = import.meta.env.DISCORD_INVITE_URL || "#";

// Check if user is already verified
const {
  data: { session },
} = await supabase.auth.getSession();
const isVerified =
  session?.user?.email === email && session?.user?.email_confirmed_at;
---

<div class="max-w-3xl mx-auto px-4 py-8 space-y-12 animate-fade-in">
  <div class="text-center space-y-4">
    <h2
      class="text-3xl md:text-4xl font-bold text-white bg-gradient-to-r from-primary-400 to-primary-600 bg-clip-text text-transparent"
    >
      Welcome to the community, {name}! üéâ
    </h2>
    <p class="text-lg text-slate-300 max-w-xl mx-auto">
      We're excited to have you here! Let's get your account set up with these
      quick steps.
    </p>
  </div>

  <div class="space-y-8">
    <!-- Email Verification Step -->
    <div class="group relative">
      <div
        class="absolute -inset-1 bg-gradient-to-r from-primary-600 to-purple-600 rounded-lg blur opacity-25 group-hover:opacity-50 transition duration-1000"
      >
      </div>
      <div
        class="relative p-6 bg-slate-800 rounded-lg border border-slate-700/50 transition-all hover:border-primary-500/50 space-y-6"
      >
        <div class="flex items-center gap-4">
          <div
            class="flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full bg-primary-500/20 text-primary-400 font-bold"
          >
            1
          </div>
          <h3 class="font-semibold text-white text-xl">Verify Your Email</h3>
        </div>

        {
          isVerified ? (
            <div class="flex items-center gap-4 p-4 bg-emerald-500/20 rounded-lg border border-emerald-500/30">
              <span class="text-2xl">‚ú®</span>
              <p class="text-emerald-300 font-medium">
                Email verified successfully! You're all set to use {email}
              </p>
            </div>
          ) : (
            <div class="space-y-4">
              <div class="prose prose-invert">
                <p class="text-slate-300">
                  We've sent a magic login link to{" "}
                  <span class="font-semibold text-primary-400">{email}</span>.
                  Click the link to verify your account and unlock all features.
                </p>
                <ul class="text-sm text-slate-400 list-disc pl-4 space-y-2">
                  <li>Can't find the email? Check your spam folder</li>
                  <li>The link expires in 24 hours</li>
                  <li>
                    Need a new link?{" "}
                    <a
                      href="/signin"
                      class="text-primary-400 hover:text-primary-300 underline"
                    >
                      Click here to request one
                    </a>
                  </li>
                </ul>
              </div>
              <img
                src="/images/email-verification.png"
                alt="Email Verification Example"
                class="rounded-lg shadow-xl w-full max-w-sm mx-auto border border-slate-700/50"
              />
            </div>
          )
        }
      </div>
    </div>

    <!-- Discord Join Step -->
    <div class="group relative">
      <div
        class="absolute -inset-1 bg-gradient-to-r from-[#5865F2] to-[#4752C4] rounded-lg blur opacity-25 group-hover:opacity-50 transition duration-1000"
      >
      </div>
      <div
        class="relative p-6 bg-slate-800 rounded-lg border border-slate-700/50 transition-all hover:border-[#5865F2]/50 space-y-6"
      >
        <div class="flex items-center gap-4">
          <div
            class="flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full bg-[#5865F2]/20 text-[#5865F2] font-bold"
          >
            2
          </div>
          <h3 class="font-semibold text-white text-xl">Join Our Community</h3>
        </div>

        <div class="flex flex-col md:flex-row gap-8 items-center">
          <div class="flex-1 space-y-4">
            <p class="text-slate-300">
              Connect with fellow builders, share your progress, and get help
              when you need it. Our Discord community is the perfect place to:
            </p>
            <ul class="text-sm text-slate-400 space-y-2">
              <li class="flex items-center gap-2">
                <span class="text-[#5865F2]">üëã</span>
                Introduce yourself and meet new friends
              </li>
              <li class="flex items-center gap-2">
                <span class="text-[#5865F2]">üí°</span>
                Share ideas and get feedback
              </li>
              <li class="flex items-center gap-2">
                <span class="text-[#5865F2]">ü§ù</span>
                Find collaboration opportunities
              </li>
            </ul>
            <div class="pt-4">
              <a
                href={DISCORD_INVITE_URL}
                target="_blank"
                rel="noopener noreferrer"
                id="discordJoinBtn"
                class="inline-flex items-center px-6 py-3 text-base font-medium rounded-lg bg-[#5865F2] text-white hover:bg-[#4752C4] transition-all duration-200 hover:scale-105"
              >
                <svg
                  class="w-5 h-5 mr-2"
                  fill="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z"
                  ></path>
                </svg>
                Join our Discord
              </a>
            </div>
          </div>
          <div class="flex-shrink-0">
            <img
              src="/images/discord.png"
              alt="Discord Community Preview"
              class="rounded-lg shadow-xl w-full max-w-xs border border-slate-700/50 hover:scale-105 transition-transform duration-200"
            />
          </div>
        </div>
      </div>
    </div>

    <!-- Profile & Project Step -->
    <div class="group relative">
      <div
        class="absolute -inset-1 bg-gradient-to-r from-emerald-600 to-teal-600 rounded-lg blur opacity-25 group-hover:opacity-50 transition duration-1000"
      >
      </div>
      <div
        class="relative p-6 bg-slate-800 rounded-lg border border-slate-700/50 transition-all hover:border-emerald-500/50 space-y-6"
      >
        <div class="flex items-center gap-4">
          <div
            class="flex-shrink-0 w-10 h-10 flex items-center justify-center rounded-full bg-emerald-500/20 text-emerald-400 font-bold"
          >
            3
          </div>
          <h3 class="font-semibold text-white text-xl">Share Your Journey</h3>
        </div>

        <div class="flex flex-col md:flex-row gap-8 items-center">
          <div class="flex-1 space-y-4">
            <p class="text-slate-300">
              Building in public is a powerful way to learn, get feedback, and
              connect with others. Start by:
            </p>
            <ul class="text-sm text-slate-400 space-y-4">
              <li class="flex items-start gap-3">
                <span class="text-emerald-400 mt-1">üéØ</span>
                <div>
                  <span class="text-emerald-400 font-medium block mb-1"
                    >Complete Your Profile</span
                  >
                  Add your bio, skills, and connect your social accounts to help
                  others know you better
                </div>
              </li>
              <li class="flex items-start gap-3">
                <span class="text-emerald-400 mt-1">üöÄ</span>
                <div>
                  <span class="text-emerald-400 font-medium block mb-1"
                    >Share Your First Project</span
                  >
                  Whether it's a work in progress or a finished product, share what
                  you're building
                </div>
              </li>
              <li class="flex items-start gap-3">
                <span class="text-emerald-400 mt-1">üìù</span>
                <div>
                  <span class="text-emerald-400 font-medium block mb-1"
                    >Post Regular Updates</span
                  >
                  Share your progress, learnings, and challenges - your journey might
                  inspire others!
                </div>
              </li>
            </ul>
            <div class="pt-4">
              <a
                href="/profile"
                class="inline-flex items-center px-6 py-3 text-base font-medium rounded-lg bg-emerald-600 text-white hover:bg-emerald-700 transition-all duration-200 hover:scale-105"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="w-5 h-5 mr-2"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
                  <circle cx="9" cy="7" r="4"></circle>
                  <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
                  <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                </svg>
                Complete Your Profile
              </a>
            </div>
          </div>
          <div class="flex-shrink-0">
            <div class="relative">
              <div
                class="absolute -inset-1 bg-gradient-to-r from-emerald-600 to-teal-600 rounded-lg blur opacity-25"
              >
              </div>
              <div class="relative space-y-3">
                <div
                  class="bg-slate-900/50 backdrop-blur-sm border border-slate-700/50 rounded-lg p-4"
                >
                  <div class="flex items-center gap-3 mb-2">
                    <div class="w-10 h-10 rounded-full bg-emerald-500/20"></div>
                    <div class="flex-1">
                      <div class="h-4 w-24 bg-emerald-500/20 rounded"></div>
                      <div class="h-3 w-16 bg-emerald-500/10 rounded mt-1">
                      </div>
                    </div>
                  </div>
                  <div class="space-y-2">
                    <div class="h-3 w-full bg-emerald-500/10 rounded"></div>
                    <div class="h-3 w-4/5 bg-emerald-500/10 rounded"></div>
                  </div>
                </div>
                <div
                  class="bg-slate-900/50 backdrop-blur-sm border border-slate-700/50 rounded-lg p-4"
                >
                  <div class="h-4 w-32 bg-emerald-500/20 rounded mb-3"></div>
                  <div class="space-y-2">
                    <div class="h-3 w-full bg-emerald-500/10 rounded"></div>
                    <div class="h-3 w-3/4 bg-emerald-500/10 rounded"></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  type ConfettiFunction = (options?: {
    particleCount?: number;
    spread?: number;
    origin?: { y: number };
  }) => void;

  class WelcomeSteps extends HTMLElement {
    private stepsCompleted = 0;
    private readonly TOTAL_STEPS = 3;
    private confetti?: ConfettiFunction;

    constructor() {
      super();
      this.init();
    }

    async init() {
      await this.importConfetti();

      // Check if email is already verified and increment step
      const verifyEmailBtn = document.getElementById(
        "verifyEmailBtn"
      ) as HTMLButtonElement;
      if (verifyEmailBtn?.getAttribute("data-verified") === "true") {
        this.incrementSteps();
      } else {
        this.setupEmailVerification();
      }

      this.setupUsernameClaimButton();
      this.setupDiscordButton();
    }

    private async importConfetti() {
      const confettiModule = await import("canvas-confetti");
      this.confetti = confettiModule.default;
    }

    private setupEmailVerification() {
      const verifyEmailBtn = document.getElementById(
        "verifyEmailBtn"
      ) as HTMLButtonElement;
      if (!verifyEmailBtn) return;

      const checkEmailVerification = async () => {
        try {
          const email = verifyEmailBtn.getAttribute("data-email");
          const response = await fetch("/api/auth/check-verification", {
            method: "POST",
            body: JSON.stringify({ email }),
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (response.ok) {
            const { verified } = await response.json();
            if (verified) {
              verifyEmailBtn.innerHTML = "‚úÖ";
              verifyEmailBtn.disabled = true;
              verifyEmailBtn.classList.remove(
                "bg-slate-700",
                "text-slate-300",
                "cursor-not-allowed"
              );
              verifyEmailBtn.classList.add("bg-emerald-500", "text-white");

              // Enable username claim button
              const claimUsernameBtn = document.getElementById(
                "claimUsernameBtn"
              ) as HTMLButtonElement;
              if (claimUsernameBtn) {
                this.enableClaimButton(claimUsernameBtn);
              }

              this.incrementSteps();
              return true;
            }
          }
          return false;
        } catch (error) {
          console.error("Error checking email verification:", error);
          return false;
        }
      };

      // Poll for email verification every 5 seconds
      const pollInterval = setInterval(async () => {
        const verified = await checkEmailVerification();
        if (verified) {
          clearInterval(pollInterval);
        }
      }, 5000);
    }

    private setupUsernameClaimButton() {
      const claimUsernameBtn = document.getElementById(
        "claimUsernameBtn"
      ) as HTMLButtonElement;
      const claimSpinner = document.getElementById("claimSpinner");
      const claimError = document.getElementById("claimError");
      if (!claimUsernameBtn || !claimSpinner || !claimError) return;

      console.log("setup claim button successful");

      const setLoading = (isLoading: boolean) => {
        claimUsernameBtn.disabled = isLoading;
        if (isLoading) {
          claimSpinner.classList.remove("hidden");
          claimUsernameBtn.querySelector("span:first-child")!.textContent =
            "Claiming...";
        } else {
          claimSpinner.classList.add("hidden");
          claimUsernameBtn.querySelector("span:first-child")!.textContent =
            "Claim";
        }
      };

      const showError = (message: string) => {
        console.error("Claim error:", message);
        claimError.textContent = message;
        claimError.classList.remove("hidden");
        setTimeout(() => {
          claimError.classList.add("hidden");
        }, 5000);
      };

      claimUsernameBtn.addEventListener("click", async () => {
        console.log("Claim button clicked");
        try {
          setLoading(true);
          claimError.classList.add("hidden");

          const username = claimUsernameBtn.getAttribute("data-username");
          console.log("Attempting to claim username:", username);

          const response = await fetch("/api/profile/claim", {
            method: "POST",
            body: JSON.stringify({ username }),
            headers: {
              "Content-Type": "application/json",
            },
            credentials: "include", // Important: include credentials for session
          });

          console.log("Claim response status:", response.status);
          const result = await response.json();
          console.log("Claim response:", result);

          if (response.ok && result.success) {
            console.log("Username claimed successfully");
            // Replace the entire button content with checkmark
            claimUsernameBtn.innerHTML = `<span class="inline-flex items-center">‚úÖ</span>`;
            claimUsernameBtn.disabled = true;
            claimUsernameBtn.classList.remove(
              "bg-primary-500",
              "hover:bg-primary-600"
            );
            claimUsernameBtn.classList.add("bg-emerald-500");
            this.incrementSteps();
          } else {
            console.error("Failed to claim username:", result.error);
            setLoading(false);
            showError(result.error || "Failed to claim username");
          }
        } catch (error) {
          console.error("Error claiming username:", error);
          setLoading(false);
          showError("Something went wrong. Please try again.");
        }
      });
    }

    private enableClaimButton(button: HTMLButtonElement) {
      button.disabled = false;
      button.classList.remove(
        "bg-slate-700",
        "text-slate-300",
        "cursor-not-allowed"
      );
      button.classList.add(
        "bg-primary-500",
        "text-white",
        "hover:bg-primary-600"
      );
    }

    private setupDiscordButton() {
      const discordJoinBtn = document.getElementById("discordJoinBtn");
      if (!discordJoinBtn) return;

      discordJoinBtn.addEventListener("click", () => {
        setTimeout(() => {
          const checkmark = document.createElement("span");
          checkmark.textContent = "‚úÖ";
          checkmark.classList.add("ml-2");
          discordJoinBtn.appendChild(checkmark);
          this.incrementSteps();
        }, 1000);
      });
    }

    private incrementSteps() {
      this.stepsCompleted++;
      if (this.stepsCompleted === this.TOTAL_STEPS) {
        // Trigger confetti when all steps are completed
        this.confetti?.({
          particleCount: 100,
          spread: 70,
          origin: { y: 0.6 },
        });
      }
    }
  }

  // Register the custom element
  customElements.define("welcome-steps", WelcomeSteps);
</script>
